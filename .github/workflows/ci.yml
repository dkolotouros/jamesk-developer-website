name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci
      working-directory: ./website_project

    - name: Run type checking
      run: npm run type-check
      working-directory: ./website_project

    - name: Run linting
      run: npm run lint
      working-directory: ./website_project

    - name: Run formatting check
      run: npm run format:check
      working-directory: ./website_project

    - name: Run tests with coverage
      run: npm run test:ci
      working-directory: ./website_project

    - name: Upload coverage reports
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Build application
      run: npm run build
      working-directory: ./website_project

  build-check:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci
      working-directory: ./website_project

    - name: Build for production
      run: npm run build
      working-directory: ./website_project

    - name: Check build artifacts
      run: |
        if [ ! -d ".next" ]; then
          echo "Build failed - .next directory not found"
          exit 1
        fi
        echo "Build successful!"
      working-directory: ./website_project